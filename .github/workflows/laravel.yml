name: Laravel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.0'
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install --ignore-platform-reqs
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
  
  build:
    needs: laravel-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
          check-latest: true
      - name: Install NPM dependencies
        run: npm install
      - name: Compile assets for production
        run: npm run production
      - name: copy files
        uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            port: ${{ secrets.PORT }}
            overwrite: true
            source: "./*"
            target: "/var/www/html"  

  # configure-laravel:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Configure laravel
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: ${{ secrets.PORT }}
  #         script: |
  #           cp ~/edionme.com/.env /var/www/html/.env
  #           cd /var/www/html
  #           composer install --optimize-autoloader --no-dev
  #           php artisan optimize
  #           sudo find /var/www/html -type d -exec chmod 2775 {} \;
  #           sudo find /var/www/html -type f -exec chmod 0664 {} \;  
    